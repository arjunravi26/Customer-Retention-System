version: "3.1"

stories:

- story: happy path
  steps:
  - intent: greet
  - action: utter_greet
  - intent: mood_great
  - action: utter_happy

- story: sad path 1
  steps:
  - intent: greet
  - action: utter_greet
  - intent: mood_unhappy
  - action: utter_cheer_up
  - action: utter_did_that_help
  - intent: affirm
  - action: utter_happy

- story: sad path 2
  steps:
  - intent: greet
  - action: utter_greet
  - intent: mood_unhappy
  - action: utter_cheer_up
  - action: utter_did_that_help
  - intent: deny
  - action: utter_goodbye

- story: Ask about service fees hike - initial question
  steps:
  - intent: ask_service_fees_hike
  - action: utter_ask_service_fees_hike
  - intent: inform_service_type  # User specifies service type
  - entities:
      - service_type: internet  # Example entity extraction
  - action: utter_explain_fees_hike # Provide general explanation, ideally with backend integration for account specific info

- story: Ask about service fees hike - clarify service type
  steps:
  - intent: ask_service_fees_hike
  - action: utter_ask_service_fees_hike
  - intent: deny # User doesn't specify service type immediately
  - action: utter_clarify_service_type_fees
  - intent: inform_service_type
  - entities:
      - service_type: mobile
  - action: utter_explain_fees_hike

- story: Report network issue - happy path
  steps:
  - intent: report_network_issue
  - action: utter_report_network_issue
  - intent: inform_service_type # User specifies service type
  - entities:
      - service_type: internet
  - intent: inform_issue_type # User specifies issue type
  - entities:
      - issue_type: slow speed
  - action: utter_ask_location_issue # Ask for location for troubleshooting
  - intent: inform_location
  - entities:
      - location: [City Name]
  - action: utter_network_issue_reported # Acknowledge report and suggest actions

- story: Report network issue - clarify service and issue
  steps:
  - intent: report_network_issue
  - action: utter_report_network_issue
  - intent: deny # User doesn't provide details initially
  - action: utter_clarify_issue_details
  - intent: inform_service_type
  - entities:
      - service_type: mobile
  - intent: inform_issue_type
  - entities:
      - issue_type: no signal
  - action: utter_ask_location_issue
  - intent: inform_location
  - entities:
      - location: [Area Name]
  - action: utter_network_issue_reported

- story: Inquire about services and offers - general inquiry
  steps:
  - intent: inquire_services_offers
  - action: utter_inquire_services_offers
  - intent: affirm # User is generally interested
  - action: utter_list_services # List general services
  - intent: goodbye
  - action: utter_goodbye

- story: Inquire about offers - specific offer type
  steps:
  - intent: inquire_services_offers
  - action: utter_inquire_services_offers
  - intent: inform_offer_type # User specifies offer type
  - entities:
      - offer_type: data offers
  - action: utter_list_offers # List relevant offers
  - intent: thank_you
  - action: utter_thank_you

- story: Request human agent
  steps:
  - intent: request_human_agent
  - action: utter_request_human_agent
  # In a real system, you would have an action here to actually trigger human handover

- story: Handle negative feedback
  steps:
  - intent: negative_feedback
  - action: utter_negative_feedback
  - intent: goodbye
  - action: utter_goodbye

- story: Fallback handling
  steps:
  - intent: nlu_fallback # Rasa's default fallback intent
  - action: action_default_fallback
  - action: utter_default # Provide a general "didn't understand" message
  - intent: goodbye
  - action: utter_goodbye

- story: Thank you flow
  steps:
  - intent: thank_you
  - action: utter_thank_you
  - intent: goodbye
  - action: utter_goodbye

- story: Bot challenge flow
  steps:
  - intent: bot_challenge
  - action: utter_bot_challenge
  - intent: greet # User might greet again after bot challenge
  - action: utter_greet
  - intent: goodbye
  - action: utter_goodbye
